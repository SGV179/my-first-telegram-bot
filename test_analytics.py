#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ - –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î –∏ —Ä–∞–±–æ—Ç—ã —Å –¥–∞–Ω–Ω—ã–º–∏
"""

from services.analytics import AnalyticsService
from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker

# üîê –î–∞–Ω–Ω—ã–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è (—Ç–µ –∂–µ, —á—Ç–æ –≤ test_final.py)
DB_CONFIG = {
    "host": "rc1a-7juj18i6akmu5ec1.mdb.yandexcloud.net",
    "port": 6432,
    "user": "bot_admin",
    "password": "kL6-TUk-i7N-Djz",  # ‚¨ÖÔ∏è –í–í–ï–î–ò–¢–ï –ü–ê–†–û–õ–¨ –ó–î–ï–°–¨
    "database": "tg_admin_bot",
    "sslmode": "require"
}

def get_db_session():
    """–°–æ–∑–¥–∞–µ—Ç —Å–µ—Å—Å–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    connection_string = (
        f"postgresql://{DB_CONFIG['user']}:{DB_CONFIG['password']}"
        f"@{DB_CONFIG['host']}:{DB_CONFIG['port']}/{DB_CONFIG['database']}"
        "?sslmode=require"
    )
    
    engine = create_engine(connection_string, echo=True)
    Session = sessionmaker(bind=engine)
    return Session()

def test_analytics():
    print("üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏...")
    print("–ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ú–ê–°–¢–ï–†-–°–ï–†–í–ï–†–£: rc1a-7juj18i6akmu5ec1.mdb.yandexcloud.net")
    
    # –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    db = get_db_session()
    print("‚úÖ –°–µ—Å—Å–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–Ω–∞")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∞–Ω–∞–ª–∏—Ç–∏–∫—É —Å –ø–µ—Ä–µ–¥–∞—á–µ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    analytics = AnalyticsService(db)
    print("‚úÖ –°–µ—Ä–≤–∏—Å –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    
    # 1. –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print("\n1. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
    user = analytics.get_or_create_user(
        telegram_id=123456789,
        username="test_user",
        first_name="Test",
        last_name="User"
    )
    
    # 2. –¢–µ–ø–µ—Ä—å –¥–æ–±–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print("\n2. –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ...")
    event = analytics.track_event(
        user_id=user.id,  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∞–ª—å–Ω—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        event_type="subscribe",
        channel_id=-1002581031645,
        event_data={"source": "bot"}
    )
    print(f"‚úÖ –°–æ–±—ã—Ç–∏–µ –∑–∞–ø–∏—Å–∞–Ω–æ: {event.event_type} (ID: {event.id})")
    
    # 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    print("\n3. –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É...")
    stats = analytics.get_daily_stats(-1002581031645)
    print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {stats}")
    
    # 4. –ü—Ä–æ–≤–µ—Ä–∏–º —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Å–æ–±—ã—Ç–∏–π
    print("\n4. –î–æ–±–∞–≤–ª—è–µ–º –µ—â–µ —Å–æ–±—ã—Ç–∏—è...")
    event2 = analytics.track_event(
        user_id=user.id,
        event_type="view",
        channel_id=-1002581031645,
        post_id=123,
        event_data={"duration": 30}
    )
    print(f"‚úÖ –°–æ–±—ã—Ç–∏–µ –∑–∞–ø–∏—Å–∞–Ω–æ: {event2.event_type} (ID: {event2.id})")
    
    # 5. –ü—Ä–æ–≤–µ—Ä–∏–º –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print("\n5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
    same_user = analytics.get_or_create_user(telegram_id=123456789)
    print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–µ–Ω: {same_user.username} (ID: {same_user.id})")
    
    # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
    db.close()
    print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")

if __name__ == "__main__":
    test_analytics()
