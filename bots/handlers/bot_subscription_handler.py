from aiogram import Bot, types
from aiogram.filters import ChatMemberUpdatedFilter, IS_MEMBER, IS_NOT_MEMBER
from database.connections import get_db
from database.models import User
from services.subscription_service import SubscriptionService
from config.settings import settings
import logging

logger = logging.getLogger(__name__)

async def handle_bot_subscription(update: types.ChatMemberUpdated, bot: Bot):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–æ–¥–ø–∏—Å–∫—É –∏ –æ—Ç–ø–∏—Å–∫—É –æ—Ç —Å–∞–º–æ–≥–æ –±–æ—Ç–∞"""
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞—Å–∞–µ—Ç—Å—è —Å–∞–º–æ–≥–æ –±–æ—Ç–∞
        if update.new_chat_member.user.id != bot.id:
            return
        
        user = update.old_chat_member.user
        subscription_service = SubscriptionService(bot)
        
        if update.new_chat_member.status == "member":
            # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–ø–∏—Å–∞–ª—Å—è –Ω–∞ –±–æ—Ç–∞
            logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} –ø–æ–¥–ø–∏—Å–∞–ª—Å—è –Ω–∞ –±–æ—Ç–∞")
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É
            db = next(get_db())
            db_user = db.query(User).filter(User.telegram_id == user.id).first()
            if not db_user:
                db_user = User(
                    telegram_id=user.id,
                    username=user.username,
                    first_name=user.first_name,
                    last_name=user.last_name,
                    role=settings.ROLES["user"]
                )
                db.add(db_user)
                db.commit()
                db.refresh(db_user)
                logger.info(f"–°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–æ—Ç–∞: {user.id}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª—ã –∏ –Ω–∞—á–∏—Å–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–µ –±–∞–ª–ª—ã
            if subscription_service.check_user_subscriptions(user.id):
                await subscription_service.update_user_score(user.id, settings.SCORING["welcome"], "welcome_bonus")
                await bot.send_message(
                    user.id,
                    f"üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã –ø–æ–ª—É—á–∏–ª–∏ {settings.SCORING['welcome']} –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã—Ö –±–∞–ª–ª–æ–≤!\n\n"
                    f"–¢–µ–ø–µ—Ä—å –≤—ã —É—á–∞—Å—Ç–≤—É–µ—Ç–µ –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏! üéÅ"
                )
            else:
                await bot.send_message(
                    user.id,
                    "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à–∏ –∫–∞–Ω–∞–ª—ã —á—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å –±–∞–ª–ª—ã:\n"
                    f"‚Ä¢ @golden_square_1\n"
                    f"‚Ä¢ @golden_asset_1\n\n"
                    f"–ü–æ—Å–ª–µ –ø–æ–¥–ø–∏—Å–∫–∏ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ {settings.SCORING['welcome']} –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã—Ö –±–∞–ª–ª–æ–≤! üéÅ"
                )
                
        elif update.new_chat_member.status in ["left", "kicked"]:
            # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø–∏—Å–∞–ª—Å—è –æ—Ç –±–æ—Ç–∞
            logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} –æ—Ç–ø–∏—Å–∞–ª—Å—è –æ—Ç –±–æ—Ç–∞")
            subscription_service.reset_user_score(user.id)
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –±–æ—Ç–∞: {e}")
