# ... [–≤–µ—Å—å –ø—Ä–µ–¥—ã–¥—É—â–∏–π –∫–æ–¥ –¥–æ —Ñ—É–Ω–∫—Ü–∏–∏ create_initial_rewards] ...

async def create_initial_rewards():
    """–°–æ–∑–¥–∞–µ—Ç –Ω–∞—á–∞–ª—å–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    try:
        from database.connections import get_db
        from database.rewards_models import Reward
        
        db = next(get_db())
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –Ω–∞–≥—Ä–∞–¥—ã
        existing_rewards = db.query(Reward).count()
        if existing_rewards > 0:
            logger.info(f"‚úÖ –í –±–∞–∑–µ —É–∂–µ –µ—Å—Ç—å {existing_rewards} –Ω–∞–≥—Ä–∞–¥")
            return
        
        # –°–æ–∑–¥–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã
        initial_rewards = [
            {
                "name": "üìö –≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –∫–Ω–∏–≥–∞",
                "description": "–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –ø–æ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è–º –∏ —Ñ–∏–Ω–∞–Ω—Å–∞–º",
                "cost": 50,
                "category": "digital"
            },
            {
                "name": "üíº –®–∞–±–ª–æ–Ω Excel",
                "description": "–ü–æ–ª–µ–∑–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã –¥–ª—è —É—á–µ—Ç–∞ —Ñ–∏–Ω–∞–Ω—Å–æ–≤ –∏ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π",
                "cost": 30,
                "category": "digital"
            },
            {
                "name": "üéì –í–∏–¥–µ–æ-—É—Ä–æ–∫",
                "description": "–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–π –≤–∏–¥–µ–æ-—É—Ä–æ–∫ –æ—Ç —ç–∫—Å–ø–µ—Ä—Ç–∞",
                "cost": 100,
                "category": "digital"
            },
            {
                "name": "üëë –ó–æ–ª–æ—Ç–æ–π —Å—Ç–∞—Ç—É—Å",
                "description": "–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å –≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–µ –Ω–∞ 1 –º–µ—Å—è—Ü",
                "cost": 200,
                "category": "status"
            },
            {
                "name": "üìä –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è",
                "description": "15-–º–∏–Ω—É—Ç–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —Å —ç–∫—Å–ø–µ—Ä—Ç–æ–º",
                "cost": 300,
                "category": "material"
            }
        ]
        
        for reward_data in initial_rewards:
            reward = Reward(**reward_data)
            db.add(reward)
        
        db.commit()
        logger.info(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ {len(initial_rewards)} –Ω–∞—á–∞–ª—å–Ω—ã—Ö –Ω–∞–≥—Ä–∞–¥")
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–∞—á–∞–ª—å–Ω—ã—Ö –Ω–∞–≥—Ä–∞–¥: {e}")

if __name__ == "__main__":
    asyncio.run(main())
