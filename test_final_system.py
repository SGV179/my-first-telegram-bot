from database.connections import create_tables, get_db
from database.models import User, ChannelSubscription, UserEvent, UserScore
from config.settings import settings
from datetime import datetime, timedelta
import json

def test_final_system():
    """–§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ–π —Å–∏—Å—Ç–µ–º—ã"""
    
    create_tables()
    print("üéØ –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –°–ò–°–¢–ï–ú–´\n")
    
    db = next(get_db())
    
    # –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    total_users = db.query(User).count()
    total_subscriptions = db.query(ChannelSubscription).count()
    total_events = db.query(UserEvent).count()
    active_subscriptions = db.query(ChannelSubscription).filter(ChannelSubscription.is_subscribed == True).count()
    
    print("üìä –û–ë–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
    print(f"   üë§ –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {total_users}")
    print(f"   üìù –í—Å–µ–≥–æ –ø–æ–¥–ø–∏—Å–æ–∫: {total_subscriptions}")
    print(f"   ‚úÖ –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫: {active_subscriptions}")
    print(f"   üéØ –í—Å–µ–≥–æ —Å–æ–±—ã—Ç–∏–π: {total_events}")
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–∞–Ω–∞–ª–∞–º
    print(f"\nüì∫ –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–û –ö–ê–ù–ê–õ–ê–ú:")
    for channel_name, channel_id in settings.CHANNELS.items():
        channel_subs = db.query(ChannelSubscription).filter(
            ChannelSubscription.channel_id == channel_id,
            ChannelSubscription.is_subscribed == True
        ).count()
        
        channel_events = db.query(UserEvent).filter(UserEvent.channel_id == channel_id).count()
        
        print(f"   ‚Ä¢ {channel_name} ({channel_id}):")
        print(f"     –ü–æ–¥–ø–∏—Å—á–∏–∫–æ–≤: {channel_subs}")
        print(f"     –°–æ–±—ã—Ç–∏–π: {channel_events}")
    
    # –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è (–∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞)
    yesterday = datetime.now() - timedelta(days=1)
    recent_events = db.query(UserEvent).filter(UserEvent.created_at >= yesterday).count()
    
    print(f"\n‚è∞ –ê–ö–¢–ò–í–ù–û–°–¢–¨ –ó–ê –ü–û–°–õ–ï–î–ù–ò–ï 24 –ß–ê–°–ê:")
    print(f"   –°–æ–±—ã—Ç–∏–π: {recent_events}")
    
    # –¢–æ–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –±–∞–ª–ª–∞–º
    print(f"\nüèÜ –¢–û–ü –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô –ü–û –ë–ê–õ–õ–ê–ú:")
    top_users = db.query(User, UserScore).join(UserScore, User.id == UserScore.user_id).order_by(UserScore.total_score.desc()).limit(5).all()
    
    if top_users:
        for i, (user, score) in enumerate(top_users, 1):
            print(f"   {i}. {user.first_name} (@{user.username}): {score.total_score} –±–∞–ª–ª–æ–≤")
    else:
        print("   –ü–æ–∫–∞ –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –±–∞–ª–ª–∞–º–∏")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏—Å—Ç–µ–º—É –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –±–∞–ª–ª–æ–≤
    print(f"\nüí∞ –°–ò–°–¢–ï–ú–ê –ë–ê–õ–õ–û–í:")
    print(f"   –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–µ –±–∞–ª–ª—ã: {settings.SCORING['welcome']}")
    print(f"   –ó–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {settings.SCORING['comment']}")
    print(f"   –ó–∞ —Ä–µ–ø–æ—Å—Ç: {settings.SCORING['repost']}")
    print(f"   –ó–∞ –ª–∞–π–∫: {settings.SCORING['like']}")

def check_system_health():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∑–¥–æ—Ä–æ–≤—å–µ —Å–∏—Å—Ç–µ–º—ã"""
    print(f"\nüîß –ü–†–û–í–ï–†–ö–ê –°–ò–°–¢–ï–ú–´:")
    
    try:
        db = next(get_db())
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
        db.execute("SELECT 1")
        print("   ‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã
        tables = ['users', 'channel_subscriptions', 'user_events', 'user_scores']
        for table in tables:
            result = db.execute(f"SELECT EXISTS (SELECT FROM information_schema.tables WHERE table_name = '{table}')")
            exists = result.scalar()
            if exists:
                print(f"   ‚úÖ –¢–∞–±–ª–∏—Ü–∞ {table}: —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            else:
                print(f"   ‚ùå –¢–∞–±–ª–∏—Ü–∞ {table}: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
        
        print("   üéâ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!")
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º—ã: {e}")

if __name__ == "__main__":
    print("=" * 50)
    test_final_system()
    check_system_health()
    print("=" * 50)
